- 常用函数

1.字符串

a.  CONCAT(string1,string2,...)
eg: SELECT CONCAT('m','y','s','q','l') => mysql
ps: SELECT CONCAT('a',NULL,'c') => null

b.  CONCAT_WS(sperator,string1,string2,...)
eg: SELECT CONCAT_WS(',','A','B') => A,B
ps: SELECT CONCAT_WS(NULL,'A','B') => NULL  |   SELECT CONCAT_WS(',','A','B',NULL) => A,B

TABLE -> USER							 TABLE -> COUSTMER 
+---------------------+---------------+  +------------------------+------------+  
| ID                  | NAME          |	 |	ID	|	USER_ID		  |	NAME	   |
+---------------------+---------------+  +------------------------+------------+
| 1         		  | 张三      	  |  |  1   |   2             | YAO        |
| 2           		  | 李四          |  |  2   |   1             | KOBE       |
| 3        			  | 王五          |  |  3   |   1             | JM         |
| 4       			  | 张三          |  |  4   |   4             | MD         |
+---------------------+---------------+  +------------------------+------------+ 
假设有一张员工表，和一张客户表

c.  GROUP_CONCAT(column,sperator(default','))
eg：SELECT GROUP_CONCAT(u.name sperator'|') FROM USER u; =>  张三|李四|王五|张三
	SELECT GROUP_CONCAT(DISTINCT u.name) FROM USER u;  => 张三,李四,王五
	SELECT GROUP_CONCAT(DISTINCT u.name ORDER BY u.name ASC) from USER u; =>  王五,李四,张三
	SELECT u.name as NAME,GROUP_CONCAT(DISTINCT c.coustmer ORDER BY c.coustmer DESC) as COUSTMERS FROM USER u LEFT JOIN COUSTMER c ON u.ID = c.USER_ID group by user_id;
	=>
	NAME		COUSTMERS
	张三	    KOBE,JM
	李四		YAO
	王五        NULL
	张三		MD
关联表做GROUP_CONCAT时需要使用GROUP_BY x,因为GROUP_CONCAT将某一列查询为一行，不加GROUP_BY只会显示一行结果

d.  LEFT(str,length) 按length长度截取str字符串
eg: SELECT('MYSQL LEFT',5) => MYSQL  如果 length < 0 返回空字符串


	
2.日期相关
a.  CURRENT_DATE();  		 返回当前日期 yyyy-MM-dd
b.  CURRENT_TIME();  		 返回当前时间 HH:mm:ss
c.  NOW(); 					 返回当前具体时间 yyyy-MM-dd HH:mm:ss
d.  UNIX_TIMESTAMP(date);	 返回当前日期对应时间戳(10位) 
eg: SELECT UNIX_TIMESTAMP(NOW());
e.  FROM_UNIXTIME(timestamp); 返回时间戳转日期
eg：SELECT FROM_UNIXTIME((SELECT UNIX_TIMESTAMP(NOW())));
f.  WEEK(date);				 返回日期对应年的第几周
g.  YEAR(date);				 返回日期对应年
h.  MINUTE(date);			 返回日期对应分钟
i.  DATE_FORMAT(date,fmt);   返回日期格式化
eg: SELECT DATE_FORMAT(NOW(),'%y-%m-%d');
------------------------------------------------------
fmt 对应格式：
%a	缩写星期名
%b	缩写月名
%c	月，数值
%D	带有英文前缀的月中的天
%d	月的天，数值(00-31)
%e	月的天，数值(0-31)
%f	微秒
%H	小时 (00-23)
%h	小时 (01-12)
%I	小时 (01-12)
%i	分钟，数值(00-59)
%j	年的天 (001-366)
%k	小时 (0-23)
%l	小时 (1-12)
%M	月名
%m	月，数值(00-12)
%p	AM 或 PM
%r	时间，12-小时（hh:mm:ss AM 或 PM）
%S	秒(00-59)
%s	秒(00-59)
%T	时间, 24-小时 (hh:mm:ss)
%U	周 (00-53) 星期日是一周的第一天
%u	周 (00-53) 星期一是一周的第一天
%V	周 (01-53) 星期日是一周的第一天，与 %X 使用
%v	周 (01-53) 星期一是一周的第一天，与 %x 使用
%W	星期名
%w	周的天 （0=星期日, 6=星期六）
%X	年，其中的星期日是周的第一天，4 位，与 %V 使用
%x	年，其中的星期一是周的第一天，4 位，与 %v 使用
%Y	年，4 位
%y	年，2 位
-------------------------------------------------------
j.  DATE_ADD(date,INTERVAL expr type) 返回日期加上一个时间间隔
eg: SELECT DATE_ADD(NOW(),INTERVAL 1 DAY) 当前日期加一天
-------------------------------------------------------
type 对应类型
MICROSECOND   			毫秒
SECOND					秒
MINUTE					分钟
HOUR					小时
DAY						天
WEEK					星期
MONTH					月
QUARTER					季度
YEAR					年
SECOND_MICROSECOND		
MINUTE_MICROSECOND
MINUTE_SECOND
HOUR_MICROSECOND
HOUR_SECOND
HOUR_MINUTE
DAY_MICROSECOND
DAY_SECOND
DAY_MINUTE
DAY_HOUR
YEAR_MONTH
-------------------------------------------------------
k. DATEDIFF(expr1,expr2)     返回起始日期expr1和expr2之间间隔的天数
eg  SELECT DATEDIFF((SELECT DATE_ADD(NOW(),INTERVAL 1 MONTH),NOW())  => 30

附：日期相关查询
========================================================

========================================================

